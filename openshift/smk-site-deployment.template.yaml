apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: smk-site-deployment
parameters:
  - name: SITE_NAME
    required: true
  - name: SITE_REPO
    required: true
  - name: REPO_BRANCH
    required: true
  - name: WEBHOOK_PATH
    required: true
  - name: WEBHOOK_SECRETS
    generate: expression
    from: "[a-zA-Z0-9]{64}"  
    required: true         
objects:
- apiVersion: v1
  stringData:
    caddy.webhook: ${WEBHOOK_SECRETS}
  kind: Secret
  metadata:
    name: ${SITE_NAME}-webhook-key
  type: Opaque
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: smk-${SITE_NAME}
    name: smk-${SITE_NAME}
  spec:
    ports:
    - name: http-proxy
      port: 8080
      targetPort: 8080
      protocol: TCP
    selector:
      app: smk-${SITE_NAME}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
    labels:
      app: smk-${SITE_NAME}
      smk-client: ${SITE_NAME}
      smk-site: ${SITE_NAME}
    name: smk-${SITE_NAME}
  spec:
    selector:
      matchLabels:
        app: smk-${SITE_NAME}
    template:
      metadata:
        labels:
          app: smk-${SITE_NAME}
      spec:
        containers:
        - command:
          - /go/caddy
          - -quic
          - -conf
          - /conf/Caddyfile
          env:
          - name: siteRepo
            value: ${SITE_REPO}
          - name: branch
            value: ${REPO_BRANCH}
          - name: hookPath
            value: ${WEBHOOK_PATH}
          - name: hookKey
            valueFrom:
              secretKeyRef:
                key: caddy.webhook
                name: ${SITE_NAME}-webhook-key
          image: docker-registry.default.svc:5000/dbc-mapsdk-tools/smk-base:latest
          imagePullPolicy: Always
          name: www
          volumeMounts:
          - mountPath: /go
            name: bin-volume
          - mountPath: /conf
            name: caddy-conf
          - mountPath: /app/smk
            name: ${SITE_NAME}-site
        initContainers:
        - command:
          - cp
          - /install/caddy
          - /dist
          image: docker-registry.default.svc:5000/dbc-mapsdk-tools/iac-core
          imagePullPolicy: Always
          name: installcaddy
          volumeMounts:
          - mountPath: /dist
            name: bin-volume
        restartPolicy: Always
        volumes:
        - emptyDir: {}
          name: bin-volume
        - configMap:
            items:
            - key: caddifile
              path: Caddyfile
            name: ${SITE_NAME}-caddifile
          name: caddy-conf
        - name: ${SITE_NAME}-site
          persistentVolumeClaim:
            claimName: ${SITE_NAME}-site
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      volume.beta.kubernetes.io/storage-class: gluster-file
    name: ${SITE_NAME}-site
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi 
- apiVersion: v1
  data:
    caddifile: |-
        0.0.0.0:8080 {
        git {$siteRepo} /app/smk {
         branch {$branch}
         hook {$hookPath} {$hookKey}
        }
        root /app/smk/sites
        gzip
        log stdout
        errors stdout
        }
  kind: ConfigMap
  metadata:
    name: ${SITE_NAME}-caddifile         
